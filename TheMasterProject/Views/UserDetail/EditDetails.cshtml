@model TheMasterProject.Models.ApplicationUser
@{
    ViewBag.Title = "EditDetails";
}



@using (Html.BeginForm("EditDetails", "UserDetail", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(model=>model.Id)
    @Html.HiddenFor(model=>model.UserName)
    @Html.HiddenFor(model=>model.PasswordHash)
    @Html.HiddenFor(model=>model.SecurityStamp)
    <div class="row" style="margin-top:30px">
        <div class="col-md-12">
            <div class="panel panel-primary" style="margin-left:auto;margin-right:auto">
                <div class="panel-heading">
                    <h4> Update User Details</h4>
                </div>
                <div class="panel-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.LastName, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Gender, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.Gender, new List<SelectListItem> {
                                   new SelectListItem { Text="Male",Value="M" },
                                   new SelectListItem { Text="Female",Value="F" }
                               }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.CurrentlyLivingIn, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.CurrentlyLivingIn, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.CurrentlyLivingIn, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.MobileNo, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.MobileNo, "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.MaritalStatus, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.MaritalStatus, new List<SelectListItem> {
                                   new SelectListItem { Text="Married",Value="M" },
                                   new SelectListItem { Text="Unmarried",Value="U" }
                               }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MaritalStatus, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.AadharCard, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.AadharCard, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.AadharCard, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.pincode, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.pincode, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.pincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.UserType, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.UserType, new List<SelectListItem> {
                                   new SelectListItem{Text="Project Lead",Value="1"},
                                   new SelectListItem{Text="Team Member", Value="2"}
                               }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.UserType, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.LeadAssigned, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.LeadAssigned, (IEnumerable<SelectListItem>)ViewBag.projectLead, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-8">
                                    <input type="submit" class="btn btn-primary" value="Update Details" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<link href="~/Content/sweetalert/sweet-alert.css" rel="stylesheet" />
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@if (TempData["Message"] != null)
{
    <script>
        swal({
            title: "Success!",
            text: "Record Updated Successfully!",
            icon: "success",
        });
    </script>
}

<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<style type="text/css">
    .swal-footer {
        text-align: center;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $('#DateOfBirth').datetimepicker({
                format: 'DD/MM/YYYY',
                ignoreReadonly: true
            });
        });
    </script>
}
